
// //     game.execute_move("P 0 0");
// //     game.execute_move("P 1 0");
// //     game.execute_move("P 1 1");
// //     game.execute_move("P 1 2");
// //     game.execute_move("P 1 3");
// //     game.execute_move("P 1 4");
// //     game.execute_move("P 1 5");
// //     game.execute_move("P 2 0");
// //     game.execute_move("P 2 1");
// //     game.execute_move("P 2 2");
// //     game.execute_move("S 1 5 M 2 11");
// //     game.execute_move("S 1 0 M 2 9");
// //     game.execute_move("S 2 1 M 3 1");
// //     game.execute_move("S 2 0 M 3 0");
// //     game.execute_move("S 2 11 M 3 16");
// //     game.execute_move("S 2 2 M 3 17");
// //     game.execute_move("S 3 1 M 5 3");
// //     game.execute_move("S 3 0 M 3 2");
// //     game.execute_move("S 5 3 M 2 10");
// //     game.execute_move("S 3 2 M 4 23");
// // //    game.execute_move("S 3 17 M 3 4");
// // //    game.execute_move("S 3 17 M 3 4");
// //     game.execute_move("S 1 1 M 4 1");
// //     game.execute_move("S 4 23 M 4 0");
// //     game.execute_move("S 4 1 M 5 2");
// //     vector<pair<int, int>> changed = game.execute_move("S 1 2 M 5 1");
// // //    for (auto u: changed){
// // //        cout << u.first << " " << u.second << endl;
// // //    }
// //     game.check5(changed);
// // //    game.print_data();
// //     game.execute_move("S 2 9 M 5 24 RS 2 9 RE 3 2 X 4 23");